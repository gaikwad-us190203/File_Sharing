import java.util.*;
public class Main
{
  public static void main(String[] args)
  {
    Scanner obj = new Scanner(System.in);
    int n = obj.nextInt();
    int k = obj.nextInt();
    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    for(int i=0;i<n;i++)
    {
      int num = obj.nextInt();
      map.put(num, map.getOrDefault(num, 0) + 1);
    }
    PriorityQueue<Pair> pq = new PriorityQueue<Pair>();
    for (Map.Entry<Integer, Integer> entry : map.entrySet())
    {
      int key = entry.getKey();
      int val = entry.getValue();
      Pair p = new Pair(key, val);
      if (pq.size() < k)
      {
        pq.add(p);
      }
      else
      {
        Pair top = pq.peek();
        if (p.freq > top.freq)
        {
          pq.poll();
          pq.add(p);
        }
        else if (p.freq == top.freq)
        {
          if (top.num > p.num)
          {
            pq.poll();
            pq.add(p);
          }
        }
      }
    }
    ArrayList<Integer> ans = new ArrayList<Integer>();
    while (!pq.isEmpty())
    {
      ans.add(pq.poll().num);
    }
    Collections.reverse(ans);
    for (int num : ans)
    {
      System.out.print(num + " ");
    }
  }
}
class Pair implements Comparable<Pair>
{
  int num;
  int freq;
  public Pair (int num, int freq)
  {
    this.num = num;
    this.freq = freq;
  }
  public int compareTo(Pair p)
  {
    int diff = this.freq - p.freq;
    if (diff != 0)
    {
      return diff;
    }
    else
    {
      int diff2 = p.num - this.num;
      return diff2;
    }
  }
}